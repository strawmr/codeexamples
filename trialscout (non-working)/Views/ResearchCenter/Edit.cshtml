@model TrialScout.Web.ViewModels.EditResearchCenterViewModel

@{
    string action = ViewBag.ReturnAction;
    string controller = ViewBag.ReturnController;
    ViewBag.Title = "Edit";
    
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "trsc-form", @id = "editForm" }))
{
    @Html.AntiForgeryToken()

    <input type="hidden" name="returnController" value="@ViewBag.ReturnController" />
    <input type="hidden" name="returnAction" value="@ViewBag.ReturnAction" />

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CenterId)
        @Html.HiddenFor(model => model.IsPublished)
        <input type="text" id="isDirty" value="false" class="d-none" />

        @Html.Partial("_ProfileProgress", Model)

        <div class="row trsc-profile-border">
            <div class="col-12">
                @Html.LabelFor(model => model.ProfileImageBlobId) @Html.Partial("_Help", "Enter the logo that will at the top of the profile page. The recommended size for this image is 400x1200.")
            </div>
            <div class="col-12">
                @if (Model.ProfileImageBlobUri != null)
                {
                    <div id="primaryImageRow">
                        <div class="row">
                            <div class="col-12">
                                <img src="@Model.ProfileImageBlobUri" style="max-width:500px; height:auto; margin:auto;" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <button type="button" class="btn btn-danger" id="removeProfileImage">Remove</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="row">
                <div class="col-12 text-center">
                    <input type="file" name="profileImage" class="btn btn-primary" value="Upload an Image" />
                </div>
            </div>
        </div>

        <div class="row trsc-profile-border">
            <div class="col-12">
                @Html.LabelFor(model => model.LocationName) @Html.Partial("_Help", "The name of the research center. If this needs to change, please contact TrialScout.")
            </div>
            <div class="col-12">
                @if (User.IsInRole("Administrators"))
                {
                    @Html.TextBoxFor(model => model.LocationName, new { @class = "form-control" })
                }
                else
                {
                    @Html.DisplayFor(model => model.LocationName, new { @class = "form-control" })
                }
                @Html.ValidationMessageFor(model => model.LocationName, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="row trsc-profile-border">
            <div class="col-12">
                @Html.LabelFor(model => model.SearchDescription)@Html.Partial("_Help", "Enter the description that will appear in the search results, not to exceed 250 characters.")
            </div>
            <div class="col-12">
                @Html.TextAreaFor(model => model.SearchDescription, new { @class = "form-control", @cols = 400, @rows = 3 })
                @Html.ValidationMessageFor(model => model.SearchDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row trsc-profile-border">
            <div class="col-12">
                @Html.LabelFor(model => model.Summary) @Html.Partial("_Help", "Enter the description that will appear on the profile page.")
            </div>
            <div class="col-12">

                @Html.TextAreaFor(model => model.Summary, new { @class = "form-control", @cols = 400, @rows = 6, @id = "summary-adv" })
                @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row trsc-profile-border">
            <div class="col-12">
                @Html.LabelFor(model => model.Address)@Html.Partial("_Help", "Enter the primary address of the research center.")
            </div>
            <div class="col-xs-12 col-md-6">
                @Html.TextBoxFor(model => model.Address, new { @class = "form-control", placeholder = "Street" })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
            <div class="col-xs-12 col-md-6">
                @Html.TextBoxFor(model => model.City, new { @class = "form-control", placeholder = "City" })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
            <div class="col-xs-12 col-md-6" style="margin-top:15px;">
                @Html.DropDownListFor(model => model.State, new SelectList(Model.States, "StateId", "StateName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
            <div class="col-xs-12 col-md-6" style="margin-top:15px;">
                @Html.TextBoxFor(model => model.Zip, new { @class = "form-control", placeholder = "Zip" })
                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
            </div>
            <div class="col-xs-12 col-md-6" style="margin-top:15px;">
                @Html.TextBoxFor(model => model.Country, new { @class = "form-control", placeholder = "Country" })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row trsc-profile-border">
            <div class="col-6">
                @Html.LabelFor(model => model.Phone) @Html.Partial("_Help", "Enter the primary phone number of the research center.")
            </div>
            <div class="col-6">
                @Html.LabelFor(model => model.Url) @Html.Partial("_Help", "Enter the primary website address of the research center.")
            </div>
            <div class="col-6">
                @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
            <div class="col-6">
                @Html.TextBoxFor(model => model.Url, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.Departments != null && Model.Departments.Count() > 0)
        {
            <div class="trsc-profile-border">
                @Html.Partial("_Departments", Model)
            </div>
        }

        <div class="row trsc-profile-border">
            <div class="col-12">
                @Html.LabelFor(model => model.LogoBlobUri)@Html.Partial("_Help", "Enter the logo that will appear in ads. The recommended size for this image is 100x300. PNG files with transparent backgrounds are highly recommended.")
            </div>
            <div class="col-12">
                @if (Model.LogoBlobUri != null)
                {
                    <div id="logoRow">
                        <div class="row">
                            <div class="col-12">
                                <img src="@Model.LogoBlobUri" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <button type="button" class="btn btn-danger" id="removeLogo">Remove Image</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="col-12">
                <input type="file" name="logoImage" id="logoImage" class="btn btn-primary" value="Upload an Image" />
            </div>
        </div>

        <div class="row trsc-profile-border">
            <div class="row">
                <div class="col-xs-12">
                    <label>Manage Images</label>@Html.Partial("_Help", "Add up to 4 images that will appear on your profile page. The recommended size for each image is 120x260.")
                </div>
            </div>
            <div class="row">
                @if (Model.Images != null && Model.Images.Count() > 0)
                {
                    foreach (TrialScout.Web.ViewModels.ResearchCenterImageViewModel image in Model.Images)
                    {
                        <div class="col-xs-12 col-md-6" style="margin-bottom:15px;">
                            <p><img src="@image.ImageUri" class="@image.ImageId img-fluid" /></p>
                            <div id="@image.ImageId" class="removeSecondaryImage @image.ImageId" style="color: #CCC; margin:-40px 0 0 6px; cursor:pointer;"><i class="fa fa-close"></i></div>
                        </div>
                    }
                }
            </div>
            <div class="row">
                @if (Model.Images == null || Model.Images.Count() < 4)
                {
                    <div class="col-xs-12">
                        <input type="file" name="secondaryImages" id="secondaryImages" class="btn btn-primary" multiple />
                    </div>
                }
            </div>
            <div class="row">
                <div class="col-xs-12">
                    <p><i>Add up to 4 images</i></p>
                </div>
            </div>

        </div>
        <div class="row trsc-profile-border">
            <div class="row">
                <div class="col-12">
                    <label>
                        Extend your reach?
                    </label>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <p>
                        @System.Web.Configuration.WebConfigurationManager.AppSettings["IncreaseBaseRadiusVerbiage"]
                    </p>
                    <label class="col-12" style="font-size: medium;">
                        @Html.CheckBoxFor(m => m.IncreaseAdRadius)
                        <strong>@System.Web.Configuration.WebConfigurationManager.AppSettings["IncreaseRadiusLabelVerbiage"]</strong>
                    </label>
                </div>
            </div>
        </div>
        <div class="row trsc-profile-border">
            <div class="row">
                <div class="col-12">
                    <label>
                        Would you like to be presented in additional cities?
                    </label>
                </div>
            </div>
            <div class="row">
                <p>
                    <i>
                        An additional fee may be charged
                    </i>
                </p>
            </div>
            <div class="row col-12">
                <div class="col-12" id="adCities">
                    @foreach (var item in Model.AdCities)
                    {
                        Html.RenderPartial("_ResearchCenterAdCity", item);
                    }
                </div>
                <div class="row">
                    <a href="#" class="btn btn-outline-success" id="addCity">+ Add another city</a>
                </div>
            </div>
            <p>
                <text class="alert-info">Your TrialScout contact will be notified of any changes affecting your invoice.</text>
            </p>
            <div class="row">
                <div class="col-12 text-center btn-group">
                    <input type="submit" name="save" id="editButton" class="btn btn-primary text-center" value="Save" />
                    @Html.ActionLink("Cancel & Exit", action, controller, null, new { @class = "btn btn-danger" })

                </div>
            </div>
        </div>
    </div>
}


<style>
    .trsc-profile-border {
        /*background-color: #DADFEC;*/
        border: 1px solid #DADFEC;
        padding: 16px;
        border-radius: 16px;
    }

        .trsc-profile-border label {
            font-size: 1.2rem;
            color: #3B5CAD;
        }

    .note-editable ul {
        list-style: disc !important;
    }

    .note-editable p {
        margin-top: 0 !important;
        margin-bottom : 0 !important;
    }

    b, strong {
        font-weight : bold !important
    }
</style>


@section scripts
{
    <script src="~/Scripts/EditResearchCenter.js"></script>
    <script>
        function CleanPastedHTML(input) {
            // 1. remove line breaks / Mso classes
            var stringStripper = /(\n|\r| class=(")?Mso[a-zA-Z]+(")?)/g;
            var output = input.replace(stringStripper, ' ');
            // 2. strip Word generated HTML comments
            var commentSripper = new RegExp('', 'g');
            var output = output.replace(commentSripper, '');
            //	var tagStripper = new RegExp('<(/)(meta|link|span|\?xml:|st1:|o:|font)(.?)>','gi');
            var tagStripper = new RegExp('<(\/)(meta|\/?xml:|st1:|o:)(.?)>', 'gi');
            // 3. remove tags leave content if any
            // 4. Remove everything in between and including tags '<style(.)style(.)>'
            var badTags = ['style', 'script', 'applet', 'embed', 'noframes', 'noscript'];

            for (var i = 0; i < badTags.length; i++) {
                tagStripper = new RegExp('<' + badTags[i] + '.*?' + badTags[i] + '(.*?)>', 'gi');
                output = output.replace(tagStripper, '');
            }
            // 5. remove attributes ' style="..."'
            var badAttributes = ['style', 'start'];
            for (var i = 0; i < badAttributes.length; i++) {
                var attributeStripper = new RegExp(' ' + badAttributes[i] + '="(.*?)"', 'gi');
                output = output.replace(attributeStripper, '');
            }
            return output;
        }

        $(document).ready(function () {
            $('#summary-adv').summernote({
                height: 500,
                minHeight: 400,
                dialogsInBody: true,
                toolbar: [
                    // [groupName, [list of button]]
                    ['style', ['style']],
                    ['font', ['bold', 'underline', 'clear', 'strikethrough', 'superscript', 'subscript']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['height', ['height']],
                    ['fontname', ['fontname']],
                    ['insert', ['link', 'picture', 'video']],
                    ['view', ['fullscreen', 'codeview', 'help']],
                ],
                callbacks: {
                    onPaste: function (e) {
                        var thisNote = $(this);
                        var updatePastedText = function (someNote) {
                            var original = someNote.summernote('code');
                            var cleaned = CleanPastedHTML(original); //this is where to call whatever clean function you want. I have mine in a different file, called CleanPastedHTML. 
                            someNote.summernote('code', cleaned); //this sets the displayed content editor to the cleaned pasted code.
                            alert("Pasted content contained Microsoft Word formatting has been removed.");
                        };
                        setTimeout(function () { updatePastedText(thisNote); }, 10);
                        //var bufferText = ((e.originalEvent || e).clipboardData || window.clipboardData).getData('Text');
                        //e.preventDefault();
                        //document.execCommand('insertText', false, bufferText);
                    }
                }
                });
        });

        $(document).ready(function () {
            var form_modified = 0;
            $('#editForm').change(function () {
                form_modified = 1;
            });

            window.onbeforeunload = confirmExit;
            function confirmExit() {
                if (form_modified == 1) {
                    return "Are you sure you want to leave without saving?";
                }

            }
            $("#editButton").click(function () {
                form_modified = 0;
            });
        });

        $('form').each(function () {
    if ($(this).data('validator'))
        $(this).data('validator').settings.ignore = ".note-editor *";
});
    </script>

}
